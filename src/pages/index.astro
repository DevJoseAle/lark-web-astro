---
// src/pages/index.astro
import { translations } from '../i18n/translations';
import Layout from '../layouts/layout.astro';

const t = translations.en;
---

<Layout title="L-ark - Your Digital Legacy, Protected" lang="en">
  <!-- Hero Section -->
  <section class="hero">
    <div class="hero-background">
      <div class="gradient-orb orb-1"></div>
      <div class="gradient-orb orb-2"></div>
      <div class="gradient-orb orb-3"></div>
    </div>
    
    <div class="hero-container">
      <div class="hero-content">
        <h1 class="hero-title animate-fade-in-up">
          {t.hero.title}<br />
          <span class="text-gradient">{t.hero.titleHighlight}</span>
        </h1>
        
        <p class="hero-subtitle animate-fade-in-up" style="animation-delay: 0.1s;">
          {t.hero.subtitle}
        </p>
        
        <p class="hero-subtitle-secondary animate-fade-in-up" style="animation-delay: 0.2s;">
          {t.hero.subtitleSecondary}
        </p>
        
        <div class="hero-buttons animate-fade-in-up" style="animation-delay: 0.3s;">
          <a href="#download" class="btn-primary btn-glow">
            <span>{t.hero.ctaPrimary}</span>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M4 10L10 16M10 16L16 10M10 16V4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </a>
          <a href="#how-it-works" class="btn-secondary">
            <span>{t.hero.ctaSecondary}</span>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M10 4V16M10 16L6 12M10 16L14 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </a>
        </div>
      </div>
      
      <div class="hero-visual animate-fade-in" style="animation-delay: 0.4s;">
        <div class="phone-mockup">
          <div class="phone-screen">
            <div class="screen-content">
              <div class="screen-header">
                <div class="screen-time">9:41</div>
                <div class="screen-status">
                  <div class="status-icon"></div>
                  <div class="status-icon"></div>
                  <div class="status-icon"></div>
                </div>
              </div>
              
              <div class="screen-body">
                <div class="screen-card glass">
                  <div class="card-icon">🛡️</div>
                  <h3>Your Legacy</h3>
                  <p>Protected & Secure</p>
                </div>
              </div>
            </div>
          </div>
          <div class="phone-notch"></div>
        </div>
        
        <div class="floating-elements">
          <div class="float-card glass" style="animation-delay: 0s;">
            <span class="float-icon">✓</span>
            <span class="float-text">Verified</span>
          </div>
          <div class="float-card glass" style="animation-delay: 0.5s;">
            <span class="float-icon">🔒</span>
            <span class="float-text">Encrypted</span>
          </div>
          <div class="float-card glass" style="animation-delay: 1s;">
            <span class="float-icon">💙</span>
            <span class="float-text">Protected</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Mission Section -->
  <section id="mission" class="mission">
    <div class="container">
      <div class="mission-content">
        <h2 class="section-title" data-animate>
          {t.mission.title}
        </h2>
        
        <div class="mission-text" data-animate>
          {t.mission.text.split('\n\n').map(paragraph => (
            <p>{paragraph}</p>
          ))}
        </div>
      </div>
      
      <div class="mission-visual" data-animate>
        <div class="mission-card glass">
          <div class="mission-icon">💙</div>
          <h3>Love</h3>
          <p>Not fear</p>
        </div>
        <div class="mission-card glass">
          <div class="mission-icon">🕊️</div>
          <h3>Peace</h3>
          <p>Of mind</p>
        </div>
        <div class="mission-card glass">
          <div class="mission-icon">🌟</div>
          <h3>Legacy</h3>
          <p>That lasts</p>
        </div>
      </div>
    </div>
  </section>

  <!-- How It Works -->
  <section id="how-it-works" class="how-it-works">
    <div class="container">
      <h2 class="section-title text-center" data-animate>
        {t.howItWorks.title}
      </h2>
      
      <div class="steps">
        <div class="step" data-animate>
          <div class="step-number">
            <span>01</span>
          </div>
          <div class="step-content">
            <div class="step-icon">🎯</div>
            <h3>{t.howItWorks.step1Title}</h3>
            {t.howItWorks.step1Text.split('\n\n').map(paragraph => (
              <p>{paragraph}</p>
            ))}
          </div>
          <div class="step-visual glass">
            <div class="visual-placeholder">
              <svg width="80" height="80" viewBox="0 0 80 80" fill="none">
                <circle cx="40" cy="40" r="35" stroke="currentColor" stroke-width="2" opacity="0.2"/>
                <path d="M40 15V40L55 50" stroke="currentColor" stroke-width="3" stroke-linecap="round"/>
              </svg>
            </div>
          </div>
        </div>

        <div class="step step-reverse" data-animate>
          <div class="step-number">
            <span>02</span>
          </div>
          <div class="step-content">
            <div class="step-icon">💎</div>
            <h3>{t.howItWorks.step2Title}</h3>
            {t.howItWorks.step2Text.split('\n\n').map(paragraph => (
              <p>{paragraph}</p>
            ))}
          </div>
          <div class="step-visual glass">
            <div class="visual-placeholder">
              <svg width="80" height="80" viewBox="0 0 80 80" fill="none">
                <rect x="20" y="20" width="40" height="40" rx="4" stroke="currentColor" stroke-width="2" opacity="0.2"/>
                <path d="M35 40L42 47L55 33" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
          </div>
        </div>

        <div class="step" data-animate>
          <div class="step-number">
            <span>03</span>
          </div>
          <div class="step-content">
            <div class="step-icon">⚡</div>
            <h3>{t.howItWorks.step3Title}</h3>
            {t.howItWorks.step3Text.split('\n\n').map(paragraph => (
              <p>{paragraph}</p>
            ))}
          </div>
          <div class="step-visual glass">
            <div class="visual-placeholder">
              <svg width="80" height="80" viewBox="0 0 80 80" fill="none">
                <path d="M40 20L50 35H30L40 20Z" stroke="currentColor" stroke-width="2" opacity="0.2"/>
                <path d="M30 45H50L40 60L30 45Z" stroke="currentColor" stroke-width="2"/>
              </svg>
            </div>
          </div>
        </div>
      </div>
      
      <p class="section-closing" data-animate>
        {t.howItWorks.closing}
      </p>
    </div>
  </section>

  <!-- Why L-ark -->
  <section class="why-lark">
    <div class="container">
      <h2 class="section-title text-center" data-animate>
        {t.whyLark.title}
      </h2>
      
      <div class="features-grid">
        <div class="feature-item glass" data-animate>
          <div class="feature-icon-large">🌍</div>
          <p>{t.whyLark.point1}</p>
        </div>
        
        <div class="feature-item glass" data-animate>
          <div class="feature-icon-large">🔒</div>
          <p>{t.whyLark.point2}</p>
        </div>
        
        <div class="feature-item glass" data-animate>
          <div class="feature-icon-large">🤝</div>
          <p>{t.whyLark.point3}</p>
        </div>
        
        <div class="feature-item glass" data-animate>
          <div class="feature-icon-large">💙</div>
          <p>{t.whyLark.point4}</p>
        </div>
      </div>
      
      <div class="why-closing" data-animate>
        {t.whyLark.closingText.split('\n\n').map(paragraph => (
          <p>{paragraph}</p>
        ))}
      </div>
    </div>
  </section>

  <!-- Technology -->
  <section class="technology">
    <div class="container">
      <div class="technology-content">
        <div class="technology-text" data-animate>
          <h2 class="section-title">{t.technology.title}</h2>
          
          {t.technology.text.split('\n\n').map(paragraph => (
            <p>{paragraph}</p>
          ))}
        </div>
        
        <div class="technology-visual" data-animate>
          <div class="tech-stack glass">
            <div class="tech-item">
              <div class="tech-icon">🔐</div>
              <span>AES-256 Encryption</span>
            </div>
            <div class="tech-item">
              <div class="tech-icon">✓</div>
              <span>KYC Validation</span>
            </div>
            <div class="tech-item">
              <div class="tech-icon">☁️</div>
              <span>Cloud Storage</span>
            </div>
            <div class="tech-item">
              <div class="tech-icon">💾</div>
              <span>Physical SSD</span>
            </div>
            <div class="tech-item">
              <div class="tech-icon">🛡️</div>
              <span>Stripe Connect</span>
            </div>
            <div class="tech-item">
              <div class="tech-icon">📋</div>
              <span>Audit Trails</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Final CTA -->
  <section class="final-cta">
    <div class="cta-background">
      <div class="gradient-orb orb-cta-1"></div>
      <div class="gradient-orb orb-cta-2"></div>
    </div>
    
    <div class="container">
      <div class="cta-content" data-animate>
        <h2>{t.finalCta.title}</h2>
        <p class="cta-text">{t.finalCta.text}</p>
        <p class="cta-subtitle">{t.finalCta.subtitle}</p>
        
        <a href="#download" class="btn-primary btn-large btn-glow">
          <span>{t.finalCta.button}</span>
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </a>
        
        <div class="app-download-buttons">
          <a href="#" class="app-btn glass">
            <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
              <path d="M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z"/>
            </svg>
            <div>
              <div class="app-label">Download on</div>
              <div class="app-name">App Store</div>
            </div>
          </a>
          
          <a href="#" class="app-btn glass">
            <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
              <path d="M3.609 1.814L13.792 12 3.61 22.186a.996.996 0 0 1-.61-.92V2.734a1 1 0 0 1 .609-.92zm10.89 10.893l2.302 2.302-10.937 6.333 8.635-8.635zm3.199-3.198l2.807 1.626a1 1 0 0 1 0 1.73l-2.808 1.626L15.206 12l2.492-2.491zM5.864 2.658L16.802 8.99l-2.303 2.303-8.635-8.635z"/>
            </svg>
            <div>
              <div class="app-label">Get it on</div>
              <div class="app-name">Google Play</div>
            </div>
          </a>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  // Intersection Observer for animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-in');
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  document.querySelectorAll('[data-animate]').forEach(el => {
    observer.observe(el);
  });

  // Smooth scroll for anchor links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
    //   const target = document.querySelector(this.getAttribute('href') );
    //   if (target) {
    //     target.scrollIntoView({
    //       behavior: 'smooth',
    //       block: 'start'
    //     });
    //   }
    });
  });
</script>

<style>
  /* Hero Section */
  .hero {
    position: relative;
    min-height: 100vh;
    display: flex;
    align-items: center;
    overflow: hidden;
  }

  .hero-background {
    position: absolute;
    inset: 0;
    overflow: hidden;
    z-index: 0;
  }

  .gradient-orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(80px);
    opacity: 0.3;
    animation: float 20s ease-in-out infinite;
  }

  .orb-1 {
    width: 500px;
    height: 500px;
    background: radial-gradient(circle, #007AFF 0%, transparent 70%);
    top: -150px;
    right: -150px;
    animation-delay: 0s;
  }

  .orb-2 {
    width: 400px;
    height: 400px;
    background: radial-gradient(circle, #00D4FF 0%, transparent 70%);
    bottom: -100px;
    left: -100px;
    animation-delay: 5s;
  }

  .orb-3 {
    width: 300px;
    height: 300px;
    background: radial-gradient(circle, #007AFF 0%, transparent 70%);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation-delay: 10s;
  }

  .hero-container {
    position: relative;
    z-index: 1;
    max-width: 1200px;
    margin: 0 auto;
    padding: 4rem 2rem;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
  }

  .hero-content {
    color: white;
  }

  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 800;
    line-height: 1.1;
    margin-bottom: 1.5rem;
    letter-spacing: -0.02em;
  }

  .hero-subtitle {
    font-size: clamp(1.125rem, 2vw, 1.375rem);
    color: rgba(255, 255, 255, 0.9);
    margin-bottom: 1rem;
    line-height: 1.6;
    font-weight: 400;
  }

  .hero-subtitle-secondary {
    font-size: clamp(1rem, 2vw, 1.25rem);
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 2.5rem;
    line-height: 1.6;
    font-weight: 300;
    font-style: italic;
  }

  .hero-buttons {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .btn-primary {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    background: var(--blue-primary);
    color: white;
    padding: 1rem 2rem;
    border-radius: var(--radius-full);
    font-weight: 600;
    font-size: 1.125rem;
    text-decoration: none;
    transition: all var(--transition-base);
    border: 2px solid transparent;
  }

  .btn-primary:hover {
    background: var(--blue-light);
    transform: translateY(-2px);
    box-shadow: 0 12px 32px rgba(0, 122, 255, 0.4);
  }

  .btn-glow {
    box-shadow: 0 0 30px rgba(0, 122, 255, 0.3);
  }

  .btn-secondary {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    color: white;
    padding: 1rem 2rem;
    border-radius: var(--radius-full);
    font-weight: 600;
    font-size: 1.125rem;
    text-decoration: none;
    border: 2px solid rgba(255, 255, 255, 0.2);
    transition: all var(--transition-base);
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
  }

  .btn-large {
    padding: 1.25rem 2.5rem;
    font-size: 1.25rem;
  }

  /* Phone Mockup */
  .hero-visual {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .phone-mockup {
    position: relative;
    width: 280px;
    height: 570px;
    background: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%);
    border-radius: 48px;
    border: 3px solid rgba(255, 255, 255, 0.2);
    padding: 12px;
    box-shadow: 0 24px 48px rgba(0, 0, 0, 0.3);
  }

  .phone-screen {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #1A2B4A 0%, #2C3E5C 100%);
    border-radius: 38px;
    overflow: hidden;
    position: relative;
  }

  .phone-notch {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 150px;
    height: 30px;
    background: #0F1C2E;
    border-radius: 0 0 20px 20px;
  }

  .screen-content {
    padding: 2rem 1.5rem;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .screen-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: white;
    font-size: 0.75rem;
    margin-bottom: 2rem;
  }

  .screen-status {
    display: flex;
    gap: 4px;
  }

  .status-icon {
    width: 16px;
    height: 12px;
    background: rgba(255, 255, 255, 0.8);
    border-radius: 2px;
  }

  .screen-body {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .screen-card {
    text-align: center;
    padding: 2rem;
    border-radius: var(--radius-lg);
    color: white;
  }

  .card-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  .screen-card h3 {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .screen-card p {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.875rem;
  }

  /* Floating Elements */
  .floating-elements {
    position: absolute;
    inset: 0;
  }

  .float-card {
    position: absolute;
    padding: 0.75rem 1.25rem;
    border-radius: var(--radius-full);
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: white;
    font-size: 0.875rem;
    font-weight: 600;
    animation: float 6s ease-in-out infinite;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  }

  .float-card:nth-child(1) {
    top: 10%;
    right: -20%;
  }

  .float-card:nth-child(2) {
    bottom: 30%;
    left: -30%;
  }

  .float-card:nth-child(3) {
    top: 60%;
    right: -15%;
  }

  .float-icon {
    font-size: 1.25rem;
  }

  /* Mission Section */
  .mission {
    padding: var(--spacing-3xl) 0;
    position: relative;
  }

  .mission-content {
    max-width: 800px;
    margin: 0 auto 4rem;
    text-align: center;
    color: white;
  }

  .section-title {
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 700;
    margin-bottom: 2rem;
    color: white;
    line-height: 1.2;
  }

  .text-center {
    text-align: center;
  }

  .mission-text p {
    font-size: 1.25rem;
    line-height: 1.8;
    color: rgba(255, 255, 255, 0.9);
    margin-bottom: 1.5rem;
  }

  .mission-visual {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
    max-width: 900px;
    margin: 0 auto;
  }

  .mission-card {
    padding: 2rem;
    text-align: center;
    border-radius: var(--radius-lg);
    color: white;
    transition: all var(--transition-base);
  }

  .mission-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 32px rgba(0, 122, 255, 0.2);
  }

  .mission-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  .mission-card h3 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .mission-card p {
    color: rgba(255, 255, 255, 0.7);
    font-size: 1rem;
  }

  /* How It Works */
  .how-it-works {
    padding: var(--spacing-3xl) 0;
  }

  .steps {
    max-width: 1000px;
    margin: 4rem auto;
  }

  .step {
    display: grid;
    grid-template-columns: 80px 1fr 300px;
    gap: 3rem;
    align-items: center;
    margin-bottom: 4rem;
    position: relative;
  }

  .step::after {
    content: '';
    position: absolute;
    left: 40px;
    top: 80px;
    bottom: -40px;
    width: 2px;
    background: linear-gradient(to bottom, var(--blue-primary), transparent);
  }

  .step:last-child::after {
    display: none;
  }

  .step-reverse {
    grid-template-columns: 80px 300px 1fr;
  }

  .step-reverse .step-content {
    order: 3;
  }

  .step-reverse .step-visual {
    order: 2;
  }

  .step-number {
    width: 80px;
    height: 80px;
    background: var(--gradient-primary);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    font-weight: 700;
    color: white;
    box-shadow: 0 8px 24px rgba(0, 122, 255, 0.3);
    position: relative;
    z-index: 1;
  }

  .step-content {
    color: white;
  }

  .step-icon {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  .step-content h3 {
    font-size: 1.75rem;
    font-weight: 600;
    margin-bottom: 1rem;
  }

  .step-content p {
    color: rgba(255, 255, 255, 0.8);
    line-height: 1.7;
    margin-bottom: 1rem;
  }

  .step-visual {
    padding: 2rem;
    border-radius: var(--radius-xl);
    min-height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .visual-placeholder {
    color: var(--blue-primary);
  }

  .section-closing {
    text-align: center;
    font-size: 1.25rem;
    color: rgba(255, 255, 255, 0.9);
    font-style: italic;
    max-width: 800px;
    margin: 3rem auto 0;
  }

  /* Why L-ark */
  .why-lark {
    padding: var(--spacing-3xl) 0;
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    max-width: 1000px;
    margin: 3rem auto;
  }

  .feature-item {
    padding: 2.5rem 2rem;
    text-align: center;
    border-radius: var(--radius-lg);
    transition: all var(--transition-base);
  }

  .feature-item:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 32px rgba(0, 122, 255, 0.2);
  }

  .feature-icon-large {
    font-size: 3.5rem;
    margin-bottom: 1.5rem;
  }

  .feature-item p {
    color: white;
    font-size: 1.125rem;
    line-height: 1.6;
  }

  .why-closing {
    max-width: 700px;
    margin: 3rem auto 0;
    text-align: center;
  }

  .why-closing p {
    color: rgba(255, 255, 255, 0.9);
    font-size: 1.25rem;
    line-height: 1.7;
    margin-bottom: 1rem;
  }

  /* Technology */
  .technology {
    padding: var(--spacing-3xl) 0;
  }

  .technology-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
  }

  .technology-text {
    color: white;
  }

  .technology-text p {
    color: rgba(255, 255, 255, 0.9);
    font-size: 1.125rem;
    line-height: 1.7;
    margin-bottom: 1.5rem;
  }

  .tech-stack {
    padding: 2rem;
    border-radius: var(--radius-xl);
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }

  .tech-item {
    padding: 1.5rem 1rem;
    background: rgba(255, 255, 255, 0.03);
    border-radius: var(--radius-md);
    text-align: center;
    border: 1px solid rgba(255, 255, 255, 0.05);
    transition: all var(--transition-base);
  }

  .tech-item:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: var(--blue-primary);
    transform: scale(1.05);
  }

  .tech-icon {
    font-size: 2rem;
    margin-bottom: 0.75rem;
  }

  .tech-item span {
    color: white;
    font-size: 0.875rem;
    font-weight: 500;
    display: block;
  }

  /* Final CTA */
  .final-cta {
    padding: var(--spacing-3xl) 0;
    position: relative;
    overflow: hidden;
  }

  .cta-background {
    position: absolute;
    inset: 0;
  }

  .orb-cta-1 {
    width: 600px;
    height: 600px;
    background: radial-gradient(circle, #007AFF 0%, transparent 70%);
    top: -200px;
    left: -200px;
  }

  .orb-cta-2 {
    width: 500px;
    height: 500px;
    background: radial-gradient(circle, #00D4FF 0%, transparent 70%);
    bottom: -150px;
    right: -150px;
  }

  .cta-content {
    position: relative;
    z-index: 1;
    text-align: center;
    max-width: 800px;
    margin: 0 auto;
    color: white;
  }

  .cta-content h2 {
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 700;
    margin-bottom: 1.5rem;
    line-height: 1.2;
  }

  .cta-text {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    font-weight: 500;
  }

  .cta-subtitle {
    font-size: 1.25rem;
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 3rem;
    font-style: italic;
  }

  .app-download-buttons {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 3rem;
  }

  .app-btn {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem 2rem;
    border-radius: var(--radius-md);
    text-decoration: none;
    color: white;
    transition: all var(--transition-base);
    min-width: 200px;
  }

  .app-btn:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 32px rgba(0, 122, 255, 0.2);
  }

  .app-label {
    font-size: 0.75rem;
    color: rgba(255, 255, 255, 0.7);
    text-align: left;
  }

  .app-name {
    font-size: 1.125rem;
    font-weight: 600;
    text-align: left;
  }

  /* Animations */
  [data-animate] {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }

  [data-animate].animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .hero-container {
      grid-template-columns: 1fr;
      text-align: center;
    }

    .hero-visual {
      display: none;
    }

    .hero-buttons {
      justify-content: center;
    }

    .step,
    .step-reverse {
      grid-template-columns: 1fr;
      text-align: center;
    }

    .step::after {
      display: none;
    }

    .step-visual {
      order: 2;
    }

    .step-reverse .step-content {
      order: 1;
    }

    .technology-content {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 768px) {
    .hero {
      min-height: auto;
      padding: 4rem 0;
    }

    .hero-title {
      font-size: 2.5rem;
    }

    .section-title {
      font-size: 2rem;
    }

    .features-grid {
      grid-template-columns: 1fr;
    }

    .mission-visual {
      grid-template-columns: 1fr;
    }

    .app-download-buttons {
      flex-direction: column;
      align-items: stretch;
    }

    .app-btn {
      justify-content: center;
    }
  }
</style>